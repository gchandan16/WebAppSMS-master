@model WEB.Models.RoleModel
@using WEB.AppCode
@using SHARED
@{
    ViewBag.Title = "Add Role";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section CSS
{
    <link href="/Content/JsTree/dist/themes/default/style.min.css" rel="stylesheet" type="text/css" />
}


@using (Html.BeginForm("CreateRole", "Admin", FormMethod.Post, new { }))
{
    @Html.HiddenFor(m => m.role_id)
    @Html.AntiForgeryToken()
    <div>

        <div class="card card_ps">
            <div class="panel panel-default">
                <div class="header_ps">
                    @if (Model.ActionName == Constants.BTN_CREATE)
                    {
                        <span>CREATE ROLE</span>
                    }
                    else
                    {
                        <span>UPDATE ROLE </span>
                    }
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="pwd" class="redlabel">
                                Role Name:
                            </label>
                        </div>
                        <div class="col-lg-2">
                            @Html.TextBoxFor(model => model.RoleName, new
                            {
                                @class = "form-control",
                                id = "txtusercode",
                           onblur = "return ValidateRoleNameExist(this)"
                            })
                            @Html.ValidationMessageFor(model => model.RoleName)
                        </div>
                        <div class="col-lg-2">
                            <label for="pwd" class="redlabel">
                                Role Description:
                            </label>
                        </div>
                        <div class="col-lg-2">
                            @Html.TextBoxFor(model => model.RoleDescription, new { @class = "form-control", id = "txtusername" })
                            @Html.ValidationMessageFor(model => model.RoleDescription)
                        </div>
                        <div class="col-lg-2">
                            <label for="pwd">
                                Status:
                            </label>
                        </div>
                        <div class="col-lg-2">
                            @Html.CheckBoxFor(model => model.IsActive, new { id = "activeId", @checked = "checked" })
                            @Html.Hidden("hdnleafmenu")
                            @Html.Hidden("hdnmenuper")
                        </div>
                    </div>
                    <hr />
                    <div class="col-md-12">
                        <div id="divjstree">
                            <!-- in this example the tree is populated from inline HTML -->
                            @Html.Raw(Model.MenuList);
                        </div>
                        <hr />
                        <div class="row botton_tppp">
                            <div class="col-lg-12  text-right margin_lf ">
                                @if (Model.ActionName == Constants.BTN_CREATE)
                                {
                                    <input type="submit" name="btntype" value="Create" id="btnadd" class="btn btn_font"
                                           onclick="return CheckValidation();" />
                                }
                                else if (Model.ActionName == Constants.BTN_EDIT)
                                {

                                    <input type="submit" class="btn btn_font" name="btntype" value="Update" id="btnupdate"
                                           onclick="return CheckValidation();" />
                                }
                                <input type="reset" class="btn btn_font" name="btntype" value="Clear" onclick="return Clear();" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section JS
{
    <script src="/Content/JsTree/dist/jstree.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {

            var data = '@Html.Raw(Json.Encode(Model.selectedMenuPermission))';
            var jsonObject = $.parseJSON(data);
            if (data != null && data.length > 0) {

                $.each(jsonObject, function (i, n) {
                    debugger;
                    if (n.PERMISSION_ID != null && n.PERMISSION_ID != 0) {
                        $('#divjstree').jstree(true).select_node("per_" + n.MENU_ID + "," + n.PERMISSION_ID);
                    }
                    else {
                        $('#divjstree').jstree(true).select_node("menu_" + n.MENU_ID);
                    }
                });
                //$("#divjstree").trigger("loaded.jstree");

            }

        });
        var menuper = [];
        var leafmenu = [];
        $('#divjstree').on('changed.jstree', function (e, data) {
            debugger;
            var i, j;
            menuper = [];
            leafmenu = [];
            for (i = 0, j = data.selected.length; i < j; i++) {
                var dataobj = data.selected[i];
                if (dataobj.indexOf('_') != -1) {

                    if (dataobj.indexOf(',') != -1) {
                        menuper.push({ Menu_PermissionString: dataobj });
                    } else {
                        leafmenu.push({ LeafMenuString: dataobj });
                    }
                }
            }

        }).jstree({
            "plugins": ["wholerow", "checkbox"]
        });

        function CheckValidation() {
            var valid = true;
            debugger;
            if (menuper.length == 0) {
                alert("Please select atleast one permission");
                valid = false;
            }
            console.log(menuper);
            $('#hdnmenuper').val(JSON.stringify(menuper));
            $('#hdnleafmenu').val(JSON.stringify(leafmenu));
            return valid;
        }

        function ValidateRoleNameExist(element) {
            var rolename = $(element).val();
            var roleid = $('#role_id').val();
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("CheckIsRoleNameExist", "Admin")',
                data: JSON.stringify({ roleName: rolename, roleId: roleid }),
                dataType: "json",
                success: function (data) {
                    if (data == true) {
                        alert("Role Name already exists");
                        $('#txtusercode').val('');
                        $('#txtusercode').focus();
                    }
                },
                error: function (data) {
                    // throw ex;
                }

            });
        }

        function Clear()
        {
            $('input[type="text"]').attr('value', '');
            $('#IsActive').attr('checked', false);
            $('#divjstree').jstree(false).deselect_all();
            $('#divjstree').jstree('close_all');
        }
    </script>
}
